apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: telegraf
  annotations:
    kapp.k14s.io/versioned: ""
data:
  telegraf.conf: |+
    [[outputs.wavefront]]
      url = "http://wavefront-proxy-tanzu.tanzu-observability-saas:2878"
    [[outputs.health]]
    ## Address and port to listen on.
    ##   ex: service_address = "http://localhost:8080"
    ##       service_address = "unix:///var/run/telegraf-health.sock"
    service_address = "http://:8080"

    ## The maximum duration for reading the entire request.
    # read_timeout = "5s"
    ## The maximum duration for writing the entire response.
    # write_timeout = "5s"

    ## Username and password to accept for HTTP basic authentication.
    # basic_username = "user1"
    # basic_password = "secret"

    ## Allowed CA certificates for client certificates.
    # tls_allowed_cacerts = ["/etc/telegraf/clientca.pem"]

    ## TLS server certificate and private key.
    # tls_cert = "/etc/telegraf/cert.pem"
    # tls_key = "/etc/telegraf/key.pem"

    ## One or more check sub-tables should be defined, it is also recommended to
    ## use metric filtering to limit the metrics that flow into this output.
    ##
    ## When using the default buffer sizes, this example will fail when the
    ## metric buffer is half full.
    ##
    ## namepass = ["internal_write"]
    ##
    ## [[outputs.health.compares]]
    ##  field = "buffer_size"
    ##  lt = 5000.0
    ##
    [[outputs.health.contains]]
      field = "datastore_disk_capacity_latest"

    # Statsd Server
    [[inputs.prometheus]]
      urls = [ "http://concourse-web.concourse:9090/metrics" ]
    [[inputs.prometheus]]
      urls = [ "http://harbor-exporter.harbor:9107/metrics" ]

      ## VMs
      ## Typical VM metrics (if omitted or empty, all metrics are collected)
      # vm_include = [ "/*/vm/**"] # Inventory path to VMs to collect (by default all are collected)
      # vm_exclude = [] # Inventory paths to exclude

      # vm_metric_exclude = [] ## Nothing is excluded by default
      # vm_instances = true ## true by default

      ## Hosts
      ## Typical host metrics (if omitted or empty, all metrics are collected)
      # host_include = [ "/*/host/**"] # Inventory path to hosts to collect (by default all are collected)
      # host_exclude [] # Inventory paths to exclude

        ## Collect IP addresses? Valid values are "ipv4" and "ipv6"
      # ip_addresses = ["ipv6", "ipv4" ]

      # host_metric_exclude = [] ## Nothing excluded by default
      # host_instances = true ## true by default


      ## Clusters
      # cluster_include = [ "/*/host/**"] # Inventory path to clusters to collect (by default all are collected)
      # cluster_exclude = [] # Inventory paths to exclude
      # cluster_metric_include = [] ## if omitted or empty, all metrics are collected
      # cluster_metric_exclude = [] ## Nothing excluded by default
      # cluster_instances = false ## false by default

      ## Datastores
      # datastore_include = [ "/*/datastore/**"] # Inventory path to datastores to collect (by default all are collected)
      # datastore_exclude = [] # Inventory paths to exclude
      # datastore_metric_include = [] ## if omitted or empty, all metrics are collected
      # datastore_metric_exclude = [] ## Nothing excluded by default
      # datastore_instances = false ## false by default

      ## Datacenters
      # datacenter_include = [ "/*/host/**"] # Inventory path to clusters to collect (by default all are collected)
      # datacenter_exclude = [] # Inventory paths to exclude

      # datacenter_instances = false ## false by default

      ## Plugin Settings
      ## separator character to use for measurement and field names (default: "_")
      # separator = "_"

      ## number of objects to retrieve per query for realtime resources (vms and hosts)
      ## set to 64 for vCenter 5.5 and 6.0 (default: 256)
      # max_query_objects = 256

      ## number of metrics to retrieve per query for non-realtime resources (clusters and datastores)
      ## set to 64 for vCenter 5.5 and 6.0 (default: 256)
      # max_query_metrics = 256

      ## number of go routines to use for collection and discovery of objects and metrics
      # collect_concurrency = 1
      # discover_concurrency = 1

      ## the interval before (re)discovering objects subject to metrics collection (default: 300s)
      # object_discovery_interval = "300s"

      ## timeout applies to any of the api request made to vcenter
      # timeout = "60s"

      ## When set to true, all samples are sent as integers. This makes the output
      ## data types backwards compatible with Telegraf 1.9 or lower. Normally all
      ## samples from vCenter, with the exception of percentages, are integer
      ## values, but under some conditions, some averaging takes place internally in
      ## the plugin. Setting this flag to "false" will send values as floats to
      ## preserve the full precision when averaging takes place.
      # use_int_samples = true

      ## Custom attributes from vCenter can be very useful for queries in order to slice the
      ## metrics along different dimension and for forming ad-hoc relationships. They are disabled
      ## by default, since they can add a considerable amount of tags to the resulting metrics. To
      ## enable, simply set custom_attribute_exclude to [] (empty set) and use custom_attribute_include
      ## to select the attributes you want to include.
      ## By default, since they can add a considerable amount of tags to the resulting metrics. To
      ## enable, simply set custom_attribute_exclude to [] (empty set) and use custom_attribute_include
      ## to select the attributes you want to include.
      # custom_attribute_include = []
      # custom_attribute_exclude = ["*"]

      ## Optional SSL Config
      # ssl_ca = "/path/to/cafile"
      # ssl_cert = "/path/to/certfile"
      # ssl_key = "/path/to/keyfile"
      ## Use SSL but skip chain & host verification
      insecure_skip_verify = true